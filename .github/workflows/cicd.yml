name: 'Homelab IaC Pipeline'

on:
  push:
    branches: [ main ]
    paths:
      - 'infrastructure-as-code/**'

  pull_request:
    branches: [ main ]
    paths:
      - 'infrastructure-as-code/**'

jobs: 
  validate:
    name: 'Lint and Validate'
    runs-on: ubuntu-latest
    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: 'Setup Terraform' 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: 'Setup Terraform Credentials'
        run: |
          mkdir -p ~/.terraform.d
          echo '{"credentials":{"app.terraform.io":{"token":"${{ secrets.TF_API_TOKEN }}"}}}' > ~/.terraform.d/credentials.tfrc.json

      - name: 'Terraform Init'
        run: terraform init -input=false
        working-directory: ./infrastructure-as-code/introduction-to-terraform

      - run: terraform fmt -check -recursive
        working-directory: ./infrastructure-as-code/introduction-to-terraform
      - run: terraform validate
        working-directory: ./infrastructure-as-code/introduction-to-terraform

  plan:
    name: 'Terraform Plan'
    needs: validate
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, homelab]
    permissions:
      pull-requests: write
    env: 
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: 'Setup Terraform Credentials'
        run: |
          mkdir -p ~/.terraform.d
          echo '{"credentials":{"app.terraform.io":{"token":"${{ secrets.TF_API_TOKEN }}"}}}' > ~/.terraform.d/credentials.tfrc.json

      - name: 'Configure SSH for Libvirt'
        run: |
          mkdir -p ~/.ssh
          echo "Host 192.168.0.40" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config

      - name: 'Setup SSH Key'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.LIBVIRT_SSH_PRIVATE_KEY }}

      - name: 'Terraform Init'
        run: terraform init -input=false
        working-directory: ./infrastructure-as-code/introduction-to-terraform

      - name: 'Debug and Run Terraform Plan'
        id: plan
        working-directory: ./infrastructure-as-code/introduction-to-terraform
        run: |
          echo "--- Verifying Environment ---"
          echo "User: $(whoami)"
          echo "HOME: ${HOME}"
          echo "--- Contents of ~/.ssh/config ---"
          cat ~/.ssh/config || echo "No ~/.ssh/config file found."
          echo "--- SSH Agent Status ---"
          env | grep SSH_
          ssh-add -l
          echo "--- Running Terraform Plan with Debug Logging ---"
          export TF_LOG=DEBUG
          terraform plan -no-color -input=false -out=plan.tfplan

  deploy:
    name: 'Deploy to Homelab'
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: [self-hosted, homelab]

    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: 'Setup Terraform Credentials'
        run: |
          mkdir -p ~/.terraform.d
          echo '{"credentials":{"app.terraform.io":{"token":"${{ secrets.TF_API_TOKEN }}"}}}' > ~/.terraform.d/credentials.tfrc.json

      - name: 'Configure SSH for Libvirt' 
        run: |
          mkdir -p ~/.ssh
          echo "Host 192.168.0.40" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config

      - name: 'Setup SSH Key'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.LIBVIRT_SSH_PRIVATE_KEY }}

      - name: 'Terraform Init'
        run: terraform init -input=false
        working-directory: ./infrastructure-as-code/introduction-to-terraform

      - name: 'Run Makefile to Deploy'
        run: make all
        working-directory: ./infrastructure-as-code/introduction-to-terraform
